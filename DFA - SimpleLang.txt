digraph BNF {
    rankdir=LR;
    node [shape=circle];

    // Definição dos estados
    start [shape=doublecircle, label="q0 (inicial)"];
    
    q1 [label="q1"];  // Tipo
    q2 [label="q2"];  // Identificador
    q3 [label="q3"];  // =
    q4 [label="q4"];  // Número / Identificador
    q5 [label="q5"];  // Operador Aritmético
    q6 [label="q6"];  // Número / Identificador
    q7 [label="q7"];  // while
    q8 [label="q8"];  // (
    q9 [label="q9"];  // Identificador no while
    q10 [label="q10"]; // Número no while
    q11 [label="q11"]; // Operador de comparação
    q12 [label="q12"]; // Identificador no while
    q13 [label="q13"]; // Número no while
    q14 [label="q14"]; // )
    q15 [label="q15"]; // {
    q16 [label="q16"]; // Instruções
    q17 [label="q17"]; // }

    q18 [label="q18"]; // if
    q19 [label="q19"]; // (
    q20 [label="q20"]; // Variável no if
    q21 [label="q21"]; // Número no if
    q22 [label="q22"]; // Operador de comparação no if
    q23 [label="q23"]; // Identificador no if
    q24 [label="q24"]; // Número no if
    q25 [label="q25"]; // )
    q26 [label="q26"]; // {
    q27 [label="q27"]; // Instruções no if
    q28 [label="q28"]; // }
    q29 [label="q29"]; // else
    q30 [label="q30"]; // {
    q31 [label="q31"]; // Instruções no else
    q32 [label="q32"]; // }

    q33 [label="q33"]; // print
    q34 [label="q34"]; // Variável no print
    q35 [label="q35"]; // Comentário
    q36 [label="q36"]; // Texto no comentário

    // Transições
    start -> q1 [label="tipo"];
    start -> q2 [label="identificador"]
    start -> q7 [label="while"];
    start -> q18 [label="if"];
    start -> q33 [label="print"];
    start -> q35 [label="#"];

    q1 -> q2 [label="identificador"];
    q2 -> q1 [label=","];
    
    q2 -> q3 [label="="];
    q3 -> q4 [label="Número/Identificador"];
    q4 -> q5 [label="+, -, *, /"];
    q5 -> q6 [label="Número/Identificador"];

    q7 -> q8 [label="("];
    q8 -> q9 [label="identificador"];
    q8 -> q10 [label="número"];
    q9 -> q11 [label=">, <, <=, >=, =="];
    q10 -> q11 [label=">, <, <=, >=, =="];
    q11 -> q12 [label="identificador"];
    q11 -> q13 [label="número"];
    q12 -> q14 [label=")"];
    q13 -> q14 [label=")"];
    q14 -> q15 [label="{"];
    q15 -> q16 [label="Instruções"];
    q16 -> q17 [label="}"];

    q18 -> q19 [label="("];
    q19 -> q20 [label="identificador"];
    q19 -> q21 [label="número"];
    q20 -> q22 [label=">, <, <=, >=, =="];
    q21 -> q22 [label=">, <, <=, >=, =="];
    q22 -> q23 [label="identificador"];
    q22 -> q24 [label="número"];
    q23 -> q25 [label=")"];
    q24 -> q25 [label=")"];
    q25 -> q26 [label="{"];
    q26 -> q27 [label="Instruções"];
    q27 -> q28 [label="}"];
    q28 -> q29 [label="else"];
    q29 -> q30 [label="{"];
    q30 -> q31 [label="Instruções"];
    q31 -> q32 [label="}"];

    q33 -> q34 [label="identificador"];

    q35 -> q36 [label="caracteres"];

    // Transições de retorno ao estado inicial
    q4 -> start;
    q6 -> start;
    q17 -> start;
    q28 -> start;
    q32 -> start;
    q34 -> start;
    q36 -> start;
    

    q2 -> start;
}
